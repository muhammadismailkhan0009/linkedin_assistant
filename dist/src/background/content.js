(()=>{class e{async sendPostToBackend(e,t){try{let o=await fetch("http://localhost:8111/linkedin/create-comment",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({scrappedPost:e,url:t})});if(!o.ok)throw Error(`Backend error: ${o.status}`);let n=await o.json();return console.log("✅ Comment received from backend:",n),n}catch(e){return console.error("❌ Failed to send post to backend:",e),null}}}async function t(){console.log("⏳ [Scraper] Waiting for DOM to load..."),"loading"===document.readyState?(await new Promise(e=>document.addEventListener("DOMContentLoaded",e)),console.log("✅ [Scraper] DOM fully loaded.")):console.log("✅ [Scraper] DOM was already ready.");let e=await function(e,t=1e4){return new Promise(o=>{let n=Date.now(),r=setInterval(()=>{let a=Date.now()-n,c=document.querySelector(e);c&&(console.log("✅ [Scraper] Found post text element."),clearInterval(r),o(c.innerText.trim())),a>=t&&(console.warn("⚠️ [Scraper] Timeout: Post text not found."),clearInterval(r),o(null))},500)})}('.update-components-update-v2__commentary span[dir="ltr"]');if(e)return e;throw console.error("❌ [Scraper] Failed to find or extract post text."),Error("post could not be extracted")}async function o(e){await chrome.storage.local.set({generatedComment:e})}async function n(){let n=await t();o(await new e().sendPostToBackend(n,""))}console.log("✅ [LinkedIn Scraper] Content script injected."),n()})();
//# sourceMappingURL=content.js.map
