(()=>{class e{async getAuthToken(){return new Promise(e=>{chrome.storage.local.get(["token"],t=>{e(t.token??null)})})}async getInstallId(){return new Promise(e=>{chrome.storage.local.get(["installId"],t=>{e(t.installId??null)})})}async sendPostToBackend(e,t){try{let o=await this.getAuthToken(),n=await this.getInstallId();if(!o||!n)throw Error("Missing auth token or install ID");let a=await fetch("https://api.wanderlytics.me/linkedin/api/v1/create-comment",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({payload:{scrappedPost:e,url:t},additionalMetadata:{installId:n}})});if(!a.ok)throw Error(`Backend error: ${a.status}`);let r=await a.json();return console.log("✅ Comment received from backend:",r),r}catch(e){return console.error("❌ Failed to send post to backend:",e),null}}}async function t(){console.log("⏳ [Scraper] Waiting for DOM to load..."),"loading"===document.readyState?(await new Promise(e=>document.addEventListener("DOMContentLoaded",e)),console.log("✅ [Scraper] DOM fully loaded.")):console.log("✅ [Scraper] DOM was already ready.");let e=await function(e,t=1e4){return new Promise(o=>{let n=Date.now(),a=setInterval(()=>{let r=Date.now()-n,l=document.querySelector(e);l&&(console.log("✅ [Scraper] Found post text element."),clearInterval(a),o(l.innerText.trim())),r>=t&&(console.warn("⚠️ [Scraper] Timeout: Post text not found."),clearInterval(a),o(null))},500)})}('.update-components-update-v2__commentary span[dir="ltr"]');if(e)return e;throw console.error("❌ [Scraper] Failed to find or extract post text."),Error("post could not be extracted")}async function o(e,t){if(!t)return;let o=`comment-${t}`;await chrome.storage.local.set({[o]:e}),console.log("comment stored:"+e)}async function n(){let n=window.location.href,a=await t();o((await new e().sendPostToBackend(a,"")).payload,n)}console.log("✅ [LinkedIn Scraper] Content script injected."),n()})();
//# sourceMappingURL=content.js.map
